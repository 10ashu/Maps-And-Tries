#include<bits/stdc++.h>
using namespace std;
class TrieNode{
public:
char ch;
TrieNode* children[26];
bool isterminal;
TrieNode(char c)
{
    this->ch=c;
    for(int i=0;i<26;i++)
    {
        children[i]=NULL;
    }
    isterminal=false;
}
};
void insert(TrieNode* root,string word)
{
    if(word.length()==0)
    {
        root->isterminal=true;
        return;
    }
    char ch=word[0];
    int index=ch-'a';
    TrieNode* child;
    if(root->children[index])
    {
        child=root->children[index];
    }
    else
    {
        child=new TrieNode(ch);
        root->children[index]=child;
    }
    insert(child,word.substr(1));
}
void storesuggestions(TrieNode* curr,string& prefix,vector<string>& temp)
{
    if(curr->isterminal)
    {
        temp.push_back(prefix);
    }
    for(char ch='a';ch<='z';ch++)
    {
        int index=ch-'a';
        TrieNode* next=curr->children[index];
        if(next!=NULL)
        {
            prefix.push_back(ch);
            storesuggestions(next,prefix,temp);
            prefix.pop_back();
        }
    }
}
vector<vector<string>> getsuggestions(TrieNode* root,string input)
{
    TrieNode* pre=root;
    vector<vector<string>> output;
     string prefix="";
     for(int i=0;i<input.size();i++)
     {
        char ch=input[i];
        int index=ch-'a';
        TrieNode* curr=pre->children[index];
        if(curr==NULL)
        break;
        else{
            prefix.push_back(ch);
            vector<string> temp;
            storesuggestions(curr,prefix,temp);
            output.push_back(temp);
            pre=curr;
        }
     }


    return output;
}
int main()
{
    vector<string> v;
    v.push_back("love");
	v.push_back("lover");
	v.push_back("loving");
	v.push_back("last");
	v.push_back("lost");
	v.push_back("lane");
	v.push_back("lord");

	string input = "lovi";
    TrieNode* root=new TrieNode('-');
    for(int i=0;i<v.size();i++)
    {
        insert(root,v[i]);
    }
    vector<vector<string>> ans=getsuggestions(root,input);
    for(int i=0;i<ans.size();i++)
    {
        for(int j=0;j<ans[i].size();j++)
         {
            cout<<ans[i][j]<<",";
         }
         cout<<endl;
    }
    

    return 0;
}
